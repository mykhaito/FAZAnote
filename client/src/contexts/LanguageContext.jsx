import { createContext, useContext, useState, useMemo } from "react";

const LanguageContext = createContext();

export const languages = {
  ukr: {
    title: "FAZAnote створений людиною для людини",
    subtitle: "",
    description: "Жодних cookies, жодних авторизацій, жодних акаунтів. Повна анонімність та свобода від пересилання своїх особистих даних.",
    features:
      "Всі ваші дані зберігаються локально у браузері. Експортуйте та імпортуйте JSON файли для резервного копіювання та переносу між пристроями.\n\nВаш прогрес завжди з вами — просто використовуйте кнопки експорту та імпорту в верхній панелі.",
    action: "Створюйте завдання, відстежуйте час, ставте цілі, виконуйте їх, заповнюйте свій календар — і все це тільки для вас.",
    warning: "⚠️ Не забувайте експортувати дані перед очищенням браузера! Ваші дані зберігаються локально і можуть бути втрачені при очищенні кешу.",
    github: "Якщо вам сподобається — поставте зірочку.",
    start: "Почати роботу",
    loading: "Завантаження...",
    theme: "Тема",
    language: "Мова",
    addTask: "Додати задачу",
    editTask: "Редагувати задачу",
    createTask: "Створити нову задачу",
    taskTitle: "Назва задачі",
    dailyGoal: "Мета на день",
    addSubtask: "Додати",
    subtaskTitle: "Назва підпункту",
    goal: "Мета",
    noGoal: "Без мети",
    cancel: "Скасувати",
    save: "Зберегти",
    create: "Створити",
    tasks: "Задачі",
    statistics: "Статистика",
    noTasks: "Немає задач на цей день",
    addTaskHint: 'Натисніть "Додати задачу" щоб створити нову',
    timeSpent: "Прогрес",
    goalTime: "Мета",
    totalTime: "Всього часу",
    session: "Сесія",
    progress: "Прогрес",
    timerActive: "Таймер активний",
    task: "Задача",
    subtask: "Підпункт",
    edit: "Редагувати",
    delete: "Видалити",
    duplicate: "Дублювати",
    transfer: "Перенести",
    transferredFrom: "Перенесена з",
    timeInputHint: "Введіть час у хвилинах (наприклад: 90 для 1.5 години)",
    subtasks: "Підпункти",
    schedule: "Розклад",
    dontRepeat: "Не повторювати",
    everyDay: "Кожен день",
    weekdaysOnly: "Тільки будні",
    weekendsOnly: "Тільки вихідні",
    customDays: "На вибрані дні тижня",
    editComment: "Редагувати коментар",
    sessionHistory: "Історія сесій",
    sun: "Нд",
    mon: "Пн",
    tue: "Вт",
    wed: "Ср",
    thu: "Чт",
    fri: "Пт",
    sat: "Сб",
    mainInfo: "Основна інформація",
    comment: "Коментар",
    enterComment: "Введіть коментар...",
    noComment: "Немає коментаря",
    dayStatistics: "Статистика дня",
    tasksLabel: "Задачі",
    completed: "Завершено",
    timeLabel: "Час",
    goalLabel: "Мета",
    completedPercent: "% завершено",
    goalPercent: "% від мети",
    detailsByTasks: "Деталі по задачах",
    hours: "г",
    minutes: "х",
    sessionTime: "Час сесії",
    taskLabel: "Задача:",
    subtaskLabel: "Підпункт:",
    exportData: "Експорт даних",
    importData: "Імпорт даних",
    exportSuccess: "Дані успішно експортовано!",
    importSuccess: "Дані успішно імпортовано!",
    importError: "Помилка при імпорті файлу. Переконайтеся, що файл має правильний формат JSON.",
    invalidFormat: "Невірний формат файлу. Файл повинен містити масив задач.",
    total: "Всього",
    noSessions: "Немає сесій таймера для цієї задачі",
    themeLabel: "Тема:",
    languageLabel: "Мова:",
    exportLabel: "Скачати:",
    importLabel: "Завантажити:",
    logoutLabel: "Вийти:",
  },
  en: {
    title: "FAZAnote is created by a human for humans",
    subtitle: "",
    description: "No cookies, no authorizations, no accounts. Complete anonymity and freedom from sharing your personal data.",
    features:
      "All your data is stored locally in your browser. Export and import JSON files for backup and transfer between devices.\n\nYour progress is always with you — just use the export and import buttons in the top panel.",
    action: "Create tasks, track time, set goals, complete them, fill your calendar — and all this only for you.",
    warning: "⚠️ Don't forget to export your data before clearing your browser! Your data is stored locally and may be lost when clearing cache.",
    github: "If you like it — give it a star.",
    start: "Get Started",
    loading: "Loading...",
    theme: "Theme",
    language: "Language",
    addTask: "Add Task",
    editTask: "Edit Task",
    createTask: "Create New Task",
    taskTitle: "Task Title",
    dailyGoal: "Daily Goal",
    addSubtask: "Add",
    subtaskTitle: "Subtask Title",
    goal: "Goal",
    noGoal: "No Goal",
    cancel: "Cancel",
    save: "Save",
    create: "Create",
    tasks: "Tasks",
    statistics: "Statistics",
    noTasks: "No tasks for this day",
    addTaskHint: 'Click "Add Task" to create a new one',
    timeSpent: "Progress",
    goalTime: "Goal",
    totalTime: "Total Time",
    session: "Session",
    progress: "Progress",
    timerActive: "Timer Active",
    task: "Task",
    subtask: "Subtask",
    edit: "Edit",
    delete: "Delete",
    duplicate: "Duplicate",
    transfer: "Transfer",
    transferredFrom: "Transferred from",
    timeInputHint: "Enter time in minutes (e.g.: 90 for 1.5 hours)",
    subtasks: "Subtasks",
    schedule: "Schedule",
    dontRepeat: "Don't repeat",
    everyDay: "Every day",
    weekdaysOnly: "Weekdays only",
    weekendsOnly: "Weekends only",
    customDays: "On selected days of the week",
    editComment: "Edit comment",
    sessionHistory: "Session history",
    sun: "Sun",
    mon: "Mon",
    tue: "Tue",
    wed: "Wed",
    thu: "Thu",
    fri: "Fri",
    sat: "Sat",
    mainInfo: "Main Information",
    comment: "Comment",
    enterComment: "Enter comment...",
    noComment: "No comment",
    dayStatistics: "Day Statistics",
    tasksLabel: "Tasks",
    completed: "Completed",
    timeLabel: "Time",
    goalLabel: "Goal",
    completedPercent: "% completed",
    goalPercent: "% of goal",
    detailsByTasks: "Details by Tasks",
    hours: "h",
    minutes: "m",
    sessionTime: "Session time",
    taskLabel: "Task:",
    subtaskLabel: "Subtask:",
    exportData: "Export Data",
    importData: "Import Data",
    exportSuccess: "Data exported successfully!",
    importSuccess: "Data imported successfully!",
    importError: "Error reading file. Make sure the file has the correct JSON format.",
    invalidFormat: "Invalid file format. File must contain an array of tasks.",
    total: "Total",
    noSessions: "No timer sessions for this task",
    themeLabel: "Theme:",
    languageLabel: "Language:",
    exportLabel: "Export:",
    importLabel: "Import:",
    logoutLabel: "Logout:",
  },
  ru: {
    title: "FAZAnote создан человеком для людей",
    subtitle: "",
    description: "Никаких cookies, никаких авторизаций, никаких аккаунтов. Полная анонимность и свобода от передачи ваших личных данных.",
    features:
      "Все ваши данные хранятся локально в браузере. Экспортируйте и импортируйте JSON файлы для резервного копирования и переноса между устройствами.\n\nВаш прогресс всегда с вами — просто используйте кнопки экспорта и импорта в верхней панели.",
    action: "Создавайте задачи, отслеживайте время, ставьте цели, выполняйте их, заполняйте календарь — и всё это только для вас.",
    warning: "⚠️ Не забывайте экспортировать данные перед очисткой браузера! Ваши данные хранятся локально и могут быть потеряны при очистке кеша.",
    github: "Если нравится — поставьте звезду.",
    start: "Начать работу",
    loading: "Загрузка...",
    theme: "Тема",
    language: "Язык",
    addTask: "Добавить задачу",
    editTask: "Редактировать задачу",
    createTask: "Создать новую задачу",
    taskTitle: "Название задачи",
    dailyGoal: "Цель на день",
    addSubtask: "Добавить",
    subtaskTitle: "Название подпункта",
    goal: "Цель",
    noGoal: "Без цели",
    cancel: "Отмена",
    save: "Сохранить",
    create: "Создать",
    tasks: "Задачи",
    statistics: "Статистика",
    noTasks: "Нет задач на этот день",
    addTaskHint: 'Нажмите "Добавить задачу" чтобы создать новую',
    timeSpent: "Прогресс",
    goalTime: "Цель",
    totalTime: "Всего времени",
    session: "Сессия",
    progress: "Прогресс",
    timerActive: "Таймер активен",
    task: "Задача",
    subtask: "Подпункт",
    edit: "Редактировать",
    delete: "Удалить",
    duplicate: "Дублировать",
    transfer: "Перенести",
    transferredFrom: "Перенесена с",
    timeInputHint: "Введите время в минутах (например: 90 для 1.5 часа)",
    subtasks: "Подпункты",
    schedule: "Расписание",
    dontRepeat: "Не повторять",
    everyDay: "Каждый день",
    weekdaysOnly: "Только будни",
    weekendsOnly: "Только выходные",
    customDays: "На выбранные дни недели",
    editComment: "Редактировать комментарий",
    sessionHistory: "История сессий",
    sun: "Вс",
    mon: "Пн",
    tue: "Вт",
    wed: "Ср",
    thu: "Чт",
    fri: "Пт",
    sat: "Сб",
    mainInfo: "Основная информация",
    comment: "Комментарий",
    enterComment: "Введите комментарий...",
    noComment: "Нет комментария",
    dayStatistics: "Статистика дня",
    tasksLabel: "Задачи",
    completed: "Завершено",
    timeLabel: "Время",
    goalLabel: "Цель",
    completedPercent: "% завершено",
    goalPercent: "% от цели",
    detailsByTasks: "Детали по задачам",
    hours: "ч",
    minutes: "м",
    sessionTime: "Время сессии",
    taskLabel: "Задача:",
    subtaskLabel: "Подпункт:",
    exportData: "Экспорт данных",
    importData: "Импорт данных",
    exportSuccess: "Данные успешно экспортированы!",
    importSuccess: "Данные успешно импортированы!",
    importError: "Ошибка при импорте файла. Убедитесь, что файл имеет правильный формат JSON.",
    invalidFormat: "Неверный формат файла. Файл должен содержать массив задач.",
    total: "Всего",
    noSessions: "Нет сессий таймера для этой задачи",
    themeLabel: "Тема:",
    languageLabel: "Язык:",
    exportLabel: "Скачать:",
    importLabel: "Загрузить:",
    logoutLabel: "Выйти:",
  },
};

export const LanguageProvider = ({ children }) => {
  const [language, setLanguage] = useState(() => {
    const saved = localStorage.getItem("faza_language");
    return saved || "en";
  });

  const value = useMemo(
    () => ({
      language,
      setLanguage,
      translations: languages[language],
    }),
    [language]
  );

  return <LanguageContext.Provider value={value}>{children}</LanguageContext.Provider>;
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error("useLanguage must be used within a LanguageProvider");
  }
  return context;
};

export const useTranslations = () => {
  const { translations } = useLanguage();
  return translations;
};
